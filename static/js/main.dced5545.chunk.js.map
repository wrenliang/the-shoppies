{"version":3,"sources":["Components/ResultItem/ResultItem.js","Components/ResultsList/ResultsList.js","Components/NominatedList/NominatedList.js","Components/FinishedScreen/FinishedScreen.js","Components/SearchBar/SearchBar.js","Assets/oscar-statuette.jpg","Components/LandingScreen/LandingScreen.js","Assets/shopify-logo.png","App/App.js","reportWebVitals.js","index.js"],"names":["ResultItem","props","state","isHovered","toggleHover","bind","nominateClicked","this","setState","console","log","movie","imdbID","addNominationHandler","forceUpdate","Poster","backgroundImageStyle","position","left","right","zIndex","width","height","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","filter","className","style","backgroundColor","onMouseEnter","onMouseLeave","display","flexDirection","justifyContent","alignItems","color","Title","Year","Button","variant","type","onClick","disabled","nominationList","includes","resultItemStyle","React","Component","ResultsList","searchResults","map","index","searchTerm","NominatedList","nominationItems","nominationMovies","src","alt","removeNominationHandler","showNominations","FinishedScreen","nominatedMovies","showFinishedScreen","dismissScreenHandler","SearchBar","debounce","searchTextDidChange","makeAPICall","debouncedSearchTextDidChange","func","delay","timeout","args","runMyFunc","clearTimeout","setTimeout","event","target","value","apiKey","searchParam","url","fetch","method","response","json","jsonData","updateListHandler","Search","Form","Group","controlId","Control","size","placeholder","onChange","LandingScreen","OscarPhoto","App","showToggleToast","showMaximumToast","showCacheToast","toggleShowNominations","showFinishedScreenSetup","hideFinishedScreenSetup","displayToggleToast","hideToggleToast","displayMaximumToast","hideMaximumToast","displayCacheToast","hideCacheToast","cachedData","localStorage","getItem","cachedJSON","JSON","parse","length","movieID","movieData","push","setItem","stringify","nListIndex","indexOf","nMoviesIndex","splice","window","scrollTo","disableScroll","on","off","Navbar","fixed","Brand","ShopifyLogo","Collapse","Badge","Toast","show","onClose","autohide","Header","Body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dced5545.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\n\n// Component Dependencies\n\n// CSS\nimport './ResultItem.css';\n\nclass ResultItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isHovered: false\n        }\n\n        this.toggleHover = this.toggleHover.bind(this);\n        this.nominateClicked = this.nominateClicked.bind(this);\n    }\n\n    toggleHover(state) {\n        this.setState({\n            isHovered: state\n        });\n    }\n\n    nominateClicked() {\n        console.log(`Movie: ${this.props.movie.imdbID} clicked`);\n        this.props.addNominationHandler(this.props.movie.imdbID, this.props.movie);\n        this.forceUpdate();\n    }\n\n    render() {\n        if (this.state.isHovered || this.props.movie.Poster === \"N/A\") {\n            const resultItemStyle = {\n                position: \"relative\",\n                width: \"300px\",\n                height: \"468px\",\n                backgroundColor: \"black\"\n            }\n            \n            const backgroundImageStyle = {\n                position: \"absolute\",\n                left: \"0\",\n                right: \"0\",\n                zIndex: \"1\",\n                width: \"300px\",\n                height: \"468px\",\n                backgroundImage: this.props.movie.Poster === \"N/A\" ? null : `url(${this.props.movie.Poster})`,\n                backgroundSize: \"cover\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"center center\",\n                filter: \"blur(3px) brightness(20%)\"\n            }\n\n            const itemInfoStyle = {\n                position: \"relative\",\n                height: \"100%\",\n                width: \"100%\",\n                zIndex: \"2\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n\n                color: \"#f2eee4\"\n            }\n\n            return (\n                <div className=\"ResultItem\" \n                    style={resultItemStyle} \n                    onMouseEnter={() => this.toggleHover(true)}\n                    onMouseLeave={() => this.toggleHover(false)}>\n                    <div className=\"ResultItemBackgroundImage\" style={backgroundImageStyle}></div>\n                    <div className=\"ResultItemInfo\" style={itemInfoStyle}>\n                        <h1>{`${this.props.movie.Title} (${this.props.movie.Year})`}</h1>\n                        <Button \n                            variant=\"light\"\n                            type=\"submit\"\n                            onClick={() => this.nominateClicked()}\n                            disabled={this.props.nominationList.includes(this.props.movie.imdbID)}>{this.props.nominationList.includes(this.props.movie.imdbID) ? `Nominated` : `Nominate`}</Button>\n                    </div>\n                </div>\n            );\n        } else {\n            const resultItemStyle=  {\n                width: \"300px\",\n                height: \"468px\",\n                backgroundImage: this.props.movie.Poster === \"N/A\" ? null : `url(${this.props.movie.Poster})`,\n                backgroundSize: \"cover\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"center center\"\n            }\n\n            return (\n                <div className=\"ResultItem\" \n                    style={resultItemStyle}\n                    onMouseEnter={() => this.toggleHover(true)}\n                    onMouseLeave={() => this.toggleHover(false)}>\n                </div>\n            );\n        }\n        \n    }\n}\n\nexport default ResultItem;","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\n// Component Dependencies\nimport ResultItem from '../ResultItem/ResultItem';\n\n// CSS\nimport './ResultsList.css';\n\nclass ResultsList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    searchResults = () => {\n        if (this.props.searchResults == null) {\n            return;\n        } else {\n            const list = this.props.searchResults.map((movie, index) => {\n                return (\n                    <ResultItem \n                        movie={movie}\n                        addNominationHandler={this.props.addNominationHandler}\n                        nominationList={this.props.nominationList}\n                        key={index}>\n                    </ResultItem>\n                )\n            });\n\n            return list;\n        }\n    }\n\n    render() {\n        if (this.props.searchTerm == null || this.props.searchTerm === \"\") {\n            return (\n                <div className=\"ResultsList\">\n                    <h1 className=\"ResultsListTitle\">{`Search results`}</h1>\n                    <p className=\"ResultsListSubtitle\"> To browse for movies, please provide a query in the search bar above</p>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"ResultsList\">\n                    <h1 className=\"ResultsListTitle\">{`Results from '${this.props.searchTerm}'`}</h1>\n                    <div className=\"GridContainer\">\n                        {this.searchResults()}\n                    </div>  \n                </div>\n            );\n        }\n        \n    }\n}\n\nexport default ResultsList;","import React from 'react';\nimport { Row,Button } from 'react-bootstrap';\n\n// Component Dependencies\n\n// CSS\nimport './NominatedList.css';\n\nclass NominatedList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    nominationItems = () => {\n        const list = this.props.nominationMovies.map((movie, index) => {\n            return (\n                <div className=\"NominationsListItem\" key={index}>\n                    <img className=\"NominationsListImage\" src={movie.Poster} alt={`Movie Poster`}></img>\n                    <div className=\"NominationsListInfo\">\n                        <h4>{`${movie.Title} (${movie.Year})`} <Button variant=\"danger\" onClick={() => (this.props.removeNominationHandler(movie.imdbID, movie))}>Remove</Button></h4> \n                    </div>\n                    \n                </div>\n            );\n        });\n\n        return list;\n    }\n\n    render() {\n        if (this.props.showNominations === true) {\n            return (\n                <div className=\"NominatedList\">\n                    <h1 className=\"NominatedListTitle\"> 🏆 Your Nominees 🏆 </h1>\n                    <div className=\"NominationsListContainer\">\n                        {this.nominationItems()}\n                    </div>\n                </div>\n            );\n        } else {\n            return null;\n        }\n        \n    }\n}\n\nexport default NominatedList;","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\n// Component Dependencies\n\n// CSS\nimport './FinishedScreen.css';\n\nclass FinishedScreen extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    nominatedMovies = () => {\n        const list = this.props.nominationMovies.map((movie, index) => {\n           return (\n               <div className=\"FinishedScreenMovieItem\" key={index}>\n                   <img className=\"FinishedScreenMovieItemImage\" src={movie.Poster} alt={`Movie Poster`}></img>\n                   <h4 className=\"FinishedScreenMovieItemText\">{`${movie.Title} (${movie.Year})`}</h4>\n               </div>\n           ) \n        });\n\n        return list;\n    }\n\n    render() {\n        if (this.props.showFinishedScreen === true) {\n            return (\n                <div className=\"FinishedScreen\">\n                    <h1 className=\"FinishedScreenTitle\">Your Nominees for the Shoppies Movie Awards are...</h1>\n                    <div className=\"FinishedScreenMovieList\">\n                        {this.nominatedMovies()}\n                    </div>\n                    <Button variant=\"secondary\" onClick={() => this.props.dismissScreenHandler()}> Continue Browsing </Button>\n                </div>\n            )\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default FinishedScreen;","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\n// Component Dependencies\n\n// CSS\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.debounce = this.debounce.bind(this);\n        this.searchTextDidChange = this.searchTextDidChange.bind(this);\n        this.makeAPICall = this.makeAPICall.bind(this);\n\n        // Create debounced function for searchbar\n        this.debouncedSearchTextDidChange = this.debounce(this.searchTextDidChange, 200);\n    }\n\n    debounce(func, delay) {\n        // lexically scoped to debouncedFunction\n        let timeout;\n\n        return function debouncedFunction(...args) {\n            const runMyFunc = () => {\n                clearTimeout(timeout);\n\n                console.log('calling debounced function now!');\n                func(...args);\n            }\n\n            clearTimeout(timeout);\n            timeout = setTimeout(runMyFunc, delay);\n        }\n    }\n\n    searchTextDidChange(event) {\n        this.makeAPICall(`9f05da9b`, event.target.value);\n    }\n\n    async makeAPICall(apiKey, searchParam) {\n        const url = `http://www.omdbapi.com/?apikey=${apiKey}&s=${searchParam}`;\n\n        const response = await fetch(url, {\n            method: 'GET'\n        });\n\n        const jsonData = await response.json();\n\n        this.props.updateListHandler(searchParam, jsonData.Search);\n\n        return;\n    }\n\n    render() {\n        return (\n            <div className=\"SearchBar\">\n                <Form>\n                    <Form.Group controlId=\"formSearchMovies\">\n                        <Form.Control\n                            size=\"lg\"\n                            placeholder=\"🔎  Search for Movies\"\n                            onChange={this.debouncedSearchTextDidChange}/>\n                    </Form.Group>\n                </Form>\n                \n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","export default __webpack_public_path__ + \"static/media/oscar-statuette.43227f87.jpg\";","import React from 'react';\n\n// Component Dependencies\nimport SearchBar from '../SearchBar/SearchBar';\n\n// CSS\nimport './LandingScreen.css';\n\n// Assets\nimport OscarPhoto from '../../Assets/oscar-statuette.jpg';\n\nclass LandingScreen extends React.Component {\n\n    render() {\n        return (\n            <div className=\"LandingScreen\">\n                <div className=\"LandingScreenLeft\">\n                    <div className=\"LandingScreenLeftInfo\">\n                        <h1 className=\"LandingScreenLeftTitle\"> The Shoppies Movie Awards are here... Choose your 5 nominees! </h1>\n                        <SearchBar updateListHandler={this.props.updateListHandler}></SearchBar>\n                    </div>\n                </div>\n                <img className=\"LandingScreenImage\" src={OscarPhoto} alt={`Oscars Award Show`}></img>\n            </div>\n        )\n    }\n\n}\n\nexport default LandingScreen;","export default __webpack_public_path__ + \"static/media/shopify-logo.ccfafe16.png\";","import React from 'react';\nimport { Navbar, Button, Badge, Toast } from 'react-bootstrap';\nimport disableScroll from 'disable-scroll';\n\n// Component Dependencies\nimport ResultsList from '../Components/ResultsList/ResultsList';\nimport NominatedList from '../Components/NominatedList/NominatedList';\nimport FinishedScreen from '../Components/FinishedScreen/FinishedScreen';\nimport LandingScreen from '../Components/LandingScreen/LandingScreen';\n\n// CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n// Assets\nimport ShopifyLogo from '../Assets/shopify-logo.png';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchTerm: null,\n      searchResults: null,\n      nominationList: [],\n      nominationMovies: [],\n      showNominations: false,\n      showFinishedScreen: false,\n      showToggleToast: false,\n      showMaximumToast: false,\n      showCacheToast: false\n    }\n\n    this.updateListHandler = this.updateListHandler.bind(this);\n    this.addNominationHandler = this.addNominationHandler.bind(this);\n    this.removeNominationHandler = this.removeNominationHandler.bind(this);\n    this.toggleShowNominations = this.toggleShowNominations.bind(this);\n    this.showFinishedScreenSetup = this.showFinishedScreenSetup.bind(this);\n    this.hideFinishedScreenSetup = this.hideFinishedScreenSetup.bind(this);\n\n    this.displayToggleToast = this.displayToggleToast.bind(this);\n    this.hideToggleToast = this.hideToggleToast.bind(this);\n    this.displayMaximumToast = this.displayMaximumToast.bind(this);\n    this.hideMaximumToast = this.hideMaximumToast.bind(this);\n    this.displayCacheToast = this.displayCacheToast.bind(this);\n    this.hideCacheToast = this.hideCacheToast.bind(this);\n  }\n\n  componentDidMount() {\n    this.hideFinishedScreenSetup();\n\n    const cachedData = localStorage.getItem('nominationCache');\n    if (cachedData != null) {\n      const cachedJSON = JSON.parse(cachedData);\n      this.setState({\n        nominationList: cachedJSON.nominationList,\n        nominationMovies: cachedJSON.nominationMovies\n      });\n\n      if (cachedJSON.nominationList.length > 0) {\n        this.displayCacheToast();\n      }\n    }\n  }\n\n  // Callback Handler for child component\n  addNominationHandler(movieID, movieData) {\n    if (this.state.nominationList.length >= 5) {\n      this.displayMaximumToast();\n    } else if (!this.state.nominationList.includes(movieID)) {\n      this.state.nominationList.push(movieID);\n      this.state.nominationMovies.push(movieData);\n\n      // Update localStorage\n      localStorage.setItem('nominationCache', JSON.stringify({\n        nominationList: this.state.nominationList,\n        nominationMovies: this.state.nominationMovies\n      }));\n\n      this.displayToggleToast();\n      this.forceUpdate();\n\n      // Change to finished screen state if nominations full\n      if (this.state.nominationList.length === 5) {\n        this.showFinishedScreenSetup();\n      }\n    }\n  }\n\n  // Callback Handler for child component\n  removeNominationHandler(movieID, movieData) {\n    const nListIndex = this.state.nominationList.indexOf(movieID);\n    const nMoviesIndex = this.state.nominationMovies.indexOf(movieData);\n\n    if (nListIndex !== -1) {\n      this.state.nominationList.splice(nListIndex, 1);\n    }\n    if (nMoviesIndex !== -1) {\n      this.state.nominationMovies.splice(nMoviesIndex, 1);\n    }\n\n    // Update localStorage\n    localStorage.setItem('nominationCache', JSON.stringify({\n      nominationList: this.state.nominationList,\n      nominationMovies: this.state.nominationMovies\n    }));\n\n    this.forceUpdate();\n  }\n\n  // Callback Handler for child component\n  updateListHandler(searchTerm, searchResults) {\n    this.setState({searchTerm: searchTerm, searchResults: searchResults});\n  }\n\n  // --- UI Convenience Functions --- \n  toggleShowNominations() {\n    this.setState({\n      showNominations: !this.state.showNominations\n    });\n  }\n\n  showFinishedScreenSetup() {\n    this.setState({\n      showFinishedScreen: true\n    });\n\n    window.scrollTo(0, 0);\n    disableScroll.on();\n  }\n\n  hideFinishedScreenSetup() {\n    this.setState({\n      showFinishedScreen: false\n    });\n\n    window.scrollTo(0, 0);\n    disableScroll.off();\n  }\n\n  displayToggleToast() {\n    this.setState({\n      showToggleToast: true\n    });\n  }\n\n  hideToggleToast() {\n    this.setState({\n      showToggleToast: false\n    });\n  }\n\n  displayMaximumToast() {\n    this.setState({\n      showMaximumToast: true\n    });\n  }\n\n  hideMaximumToast() {\n    this.setState({\n      showMaximumToast: false\n    });\n  }\n\n  displayCacheToast() {\n    this.setState({\n      showCacheToast: true\n    });\n  }\n\n  hideCacheToast() {\n    this.setState({\n      showCacheToast: false\n    });\n  }\n  // --- UI Convenience Functions --- \n\n  render() {\n    return (\n      <div className=\"App\">\n          <Navbar fixed=\"top\" variant=\"light\">\n            <Navbar.Brand> <img src={ShopifyLogo} alt={`Shopify Logo`} width=\"30\" height=\"30\" className=\"d-inline-block align-top\"></img> <strong>The Shoppies</strong> </Navbar.Brand>\n            <Navbar.Collapse className=\"justify-content-end\">\n              <Button\n                variant=\"success\"\n                onClick={() => this.toggleShowNominations()}>\n                <Badge variant={this.state.nominationList.length >= 5 ? \"danger\": \"light\"}> {this.state.nominationList.length} </Badge>\n                🏆\n              </Button>\n            </Navbar.Collapse>\n          </Navbar>\n\n          <div className=\"ToastContainer\">\n            <div className=\"ToastContainerNavbarSpacer\"></div>\n            <Toast show={this.state.showToggleToast} onClose={() => this.hideToggleToast()} delay={3000} autohide>\n              <Toast.Header><strong className=\"mr-auto\">✅ Nominated!</strong>\n              <small>now</small></Toast.Header>\n              <Toast.Body>Click the 🏆 button to toggle Nominations View</Toast.Body>\n            </Toast>\n            <Toast show={this.state.showMaximumToast} onClose={() => this.hideMaximumToast()} delay={3000} autohide>\n              <Toast.Header><strong className=\"mr-auto\">⚠️ Limit Exceeded!</strong>\n              <small>now</small></Toast.Header>\n              <Toast.Body>You already have 5 nominations!</Toast.Body>\n            </Toast>\n            <Toast show={this.state.showCacheToast} onClose={() => this.hideCacheToast()} delay={3000} autohide>\n              <Toast.Header><strong className=\"mr-auto\">💾 Restored from Cache!</strong>\n              <small>now</small></Toast.Header>\n              <Toast.Body>Your nominations were restored from your browser's cache</Toast.Body>\n            </Toast>\n          </div>\n\n          <LandingScreen updateListHandler={this.updateListHandler}></LandingScreen>\n          \n\n          <div className=\"ResultsNominationsContainer\">\n            <ResultsList \n              searchTerm={this.state.searchTerm}\n              searchResults={this.state.searchResults}\n              nominationList={this.state.nominationList}\n              addNominationHandler={this.addNominationHandler}>\n            </ResultsList>\n            <NominatedList\n              showNominations={this.state.showNominations}\n              removeNominationHandler={this.removeNominationHandler}\n              nominationMovies={this.state.nominationMovies}>\n            </NominatedList>\n            <FinishedScreen\n              showFinishedScreen={this.state.showFinishedScreen}\n              dismissScreenHandler={this.hideFinishedScreenSetup}\n              nominationMovies={this.state.nominationMovies}>\n            </FinishedScreen>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}